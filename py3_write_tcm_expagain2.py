import os
import json

#########################################
##
file = open('temp1.txt', 'r'); aa= file.read(); ibin_ter = int(aa)
print ('This run is for ibin2/ter3 = ', ibin_ter); ## 2 for binary and 3 for ternary
##-------------------------------------------------------------------------

name_exp  = 'myExptTLINV_sorted.exp'
file0_exp = 'new_expt_data.json'
if ibin_ter == 2:
    maxtemp    = 2700   # the max temp
    file_tcm = 'PD_binary.tcm'

if ibin_ter == 3:
    maxtemp    = 1373    # the temp for the isothermal section
    file_tcm = 'PD_ternary.tcm'

###############################################################################
## define some funcitons below
def Write_tcm_file3(file_tcm, elem2, maxtemp):
    with open(file_tcm, 'w') as f:
        f.write('\n')
        f.write('\ngo data ')
        f.write('\nsw user ESPEI_opt_params.tdb ')
        f.write('\n')
        f.write('\ndef-ele ')
        f.write(elem2[0] + ' ' + elem2[1] + ' ' + elem2[2])
        f.write('\n')
        f.write('\nget')
        f.write('\n')
        f.write('\ngo p-3')
        f.write('\ns-c n=1 p=1e5 ')
        f.write('\ns-c t=')
        f.write(str(maxtemp))
        f.write('\ns-c x(')
        f.write(elem2[1]+')=0.2')
        f.write('\n')
        f.write('\ns-c x(')
        f.write(elem2[2]+')=0.3')
        f.write('\n')
        f.write('\nc-e')
        f.write('\nc-e')
        f.write('\n')
        f.write('\ns-a-v 1 x(')
        f.write(elem2[1] + ') ,,,,')
        f.write('\ns-a-v 2 x(')
        f.write(elem2[2] + ') ,,,,')
        f.write('\n')
        f.write('\nadd ,,,,')
        f.write('\nmap')
        f.write('\n')
        f.write('\npo')
        f.write('\ns-l f')
        f.write('\n')
        f.write('\ns-d-t')
        f.write('\ny')
        f.write('\n')
        f.write('\ns-t-s')
        f.write('\n1')
        f.write('\n')
        f.write('\napp y myExptTLINV_sorted.exp')
        f.write('\n0')
        f.write('\n1')
        f.write('\n')
        f.write('\npl ,,,,')
        f.write('\n')
        f.write('\nset-inter')
        f.write('\n')
    f.close()

def Write_tcm_file2(file_tcm, elem2, maxtemp):
    with open(file_tcm, 'w') as f:
        f.write('\n')
        f.write('\ngo data ')
        f.write('\nsw user ESPEI_opt_params.tdb ')
        f.write('\n')
        f.write('\ndef-ele ')
        f.write(elem2[0] + ' ' + elem2[1])
        f.write('\n')
        f.write('\nget')
        f.write('\n')
        f.write('\ngo p-3')
        f.write('\ns-c n=1 p=1e5 ')
        f.write('\ns-c t=')
        f.write(str(maxtemp))
        f.write('\ns-c x(')
        f.write(elem2[1]+')=0.3')
        f.write('\n')
        f.write('\nc-e')
        f.write('\nc-e')
        f.write('\n')
        f.write('\ns-a-v 1 x(')
        f.write(elem2[1] + ') ,,,,')
        f.write('\ns-a-v 2 t 300 ')
        f.write(str(maxtemp) + ' ,,,,')
        f.write('\n')
        f.write('\nadd ,,,,')
        f.write('\nmap')
        f.write('\n')
        f.write('\npo')
        f.write('\ns-l f')
        f.write('\n')
        f.write('\napp y myExptTLINV_sorted.exp')
        f.write('\n0')
        f.write('\n1')
        f.write('\n')
        f.write('\npl ,,,,')
        f.write('\n')
        f.write('\nset-inter')
        f.write('\n')
    f.close()

##
def To_write_exp_file2(name_exp, temp2, val2a, val2b, temp3, val3a, val3b, val3c):
    with open(name_exp, 'w') as f:
        f.write('\n$DATAPLOT Phase diagram generated by py_sort_TL code')
        f.write('\nDATASET 1 ')
        f.write('\nATTRIBUTE CENTER ')
        f.write('\n')
        f.write('\nCOLOR 1 ')
        for i in range(len(temp2)):
            f.write('\n')
            asd1 = str(val2a[i]) + '  ' + str(temp2[i]) + '  S1'
            asd2 = str(val2b[i]) + '  ' + str(temp2[i]) + '  S1'
            f.write(asd1)
            f.write('\n')
            f.write(asd2)
        f.write('\n')
        nnt3=len(temp3)
        if nnt3 > 0:
            f.write('\nCOLOR 2 ')
            for i in range(nnt3):
                f.write('\n')
                aa1 = str(val3a[i]) + '  ' + str(temp3[i]) + '  S100'
                aa2 = str(val3b[i]) + '  ' + str(temp3[i]) + '  S100'
                aa3 = str(val3c[i]) + '  ' + str(temp3[i]) + '  S100'
                f.write(aa1)
                f.write('\n')
                f.write(aa2)
                f.write('\n')
                f.write(aa3)
            f.write('\n')
    f.close()
##------------

def To_write_exp_file3(name_exp, val2a, val2b, wal2a, wal2b, val3a, val3b, val3c, wal3a, wal3b, wal3c):
    with open(name_exp, 'w') as f:
        f.write('\n$DATAPLOT Phase diagram generated by py_sort_TL code')
        f.write('\nDATASET 1 ')
        f.write('\nATTRIBUTE CENTER ')
        f.write('\n')
        f.write('\nCOLOR 1 ')
        for i in range(len(val2a)):
            f.write('\n')
            asd1 = str(val2a[i]) + '  ' + str(wal2a[i]) + '  S1'
            asd2 = str(val2b[i]) + '  ' + str(wal2b[i]) + '  S1'
            f.write(asd1)
            f.write('\n')
            f.write(asd2)
        f.write('\n')
        nnt3=len(val3a)
        if nnt3 > 0:
            f.write('\nCOLOR 2 ')
            for i in range(nnt3):
                f.write('\n')
                aa1 = str(val3a[i]) + '  ' + str(wal3a[i]) + '  S100'
                aa2 = str(val3b[i]) + '  ' + str(wal3b[i]) + '  S100'
                aa3 = str(val3c[i]) + '  ' + str(wal3c[i]) + '  S100'
                f.write(aa1)
                f.write('\n')
                f.write(aa2)
                f.write('\n')
                f.write(aa3)
            f.write('\n')
    f.close()

### END of function
########################################################################################
########################################################################################
########################################################################################
##
## for INV case below to write thermo-calc EXP file
with open('INV_Alls.json') as f:
    data_dict = json.load(f)
    temp3 = data_dict.get("conditions").get("T")
    val3a=[]; val3b=[]; val3c=[]; wal3a = []; wal3b = []; wal3c = []
    for i in range(len(temp3)):
        val3a.append(data_dict.get("values")[i][0][2][0])
        val3b.append(data_dict.get("values")[i][1][2][0])
        val3c.append(data_dict.get("values")[i][2][2][0])
        if ibin_ter == 3:
            wal3a.append(data_dict.get("values")[i][0][2][1])
            wal3b.append(data_dict.get("values")[i][1][2][1])
            wal3c.append(data_dict.get("values")[i][2][2][1])
print()
print('temp3=',  len(temp3), '    ', temp3)
print('val3a=',  len(val3a), '    ', val3a)
print()

############################################################################
## for all TL cases below to write thermo-calc EXP file based on nTL+ files
current_dir_files2 = os.listdir('.')
ntot_temp2=[]; ntot_val2a=[]; ntot_val2b=[]; ntot_wal2a=[]; ntot_wal2b=[]
valu=[]; temp=[]
for fname in current_dir_files2:
    if fname[0:4] == 'nTL+':
        if ibin_ter == 2:
            with open(fname) as f:
                data_dict = json.load(f)
                valu = data_dict.get("values")
                temp = data_dict.get("conditions").get("T")
                elem2 = data_dict.get("components")
            # print(); print('name and temp = ', fname, temp)
            ntot_temp2.extend(temp)
            asd1 = [];  asd2 = []
            for i in range(len(valu)):
                asd1.append(valu[i][0][2][0])
                asd2.append(valu[i][1][2][0])
            ntot_val2a.extend(asd1)
            ntot_val2b.extend(asd2)

        if ibin_ter == 3:
            with open(fname) as f:
                data_dict = json.load(f)
                valu = data_dict.get("values")
                temp = data_dict.get("conditions").get("T")
                elem2 = data_dict.get("components")
            # print(); print('name and temp = ', fname, temp)
            ntot_temp2.extend(temp)
            asd1 = [];  asd2 = [];  asd3 = [];  asd4 = []
            for i in range(len(valu)):
                asd1.append(valu[i][0][2][0])
                asd2.append(valu[i][1][2][0])
                asd3.append(valu[i][0][2][1])
                asd4.append(valu[i][1][2][1])
            ntot_val2a.extend(asd1)
            ntot_val2b.extend(asd2)
            ntot_wal2a.extend(asd3)
            ntot_wal2b.extend(asd4)

##############
print()
print('Len new sorted ntot_temp2=',  len(ntot_temp2))
print('Len new sorted ntot_val2a=',  len(ntot_val2a))

###########
elem2 = [x for x in elem2 if x != 'VA']

if ibin_ter == 2:
    To_write_exp_file2(name_exp, ntot_temp2, ntot_val2a, ntot_val2b, temp3, val3a, val3b, val3c)
    Write_tcm_file2(file_tcm, elem2, maxtemp)  ## to write tcm file

if ibin_ter == 3:
    To_write_exp_file3(name_exp, ntot_val2a, ntot_val2b, ntot_wal2a, ntot_wal2b, val3a, val3b, val3c, wal3a, wal3b, wal3c)
    Write_tcm_file3(file_tcm, elem2, maxtemp)  ## to write tcm file

###########

if os.path.exists(file0_exp) and ibin_ter == 2:
    with open(file0_exp) as f:
        data_dict = json.load(f)
        temp4 = data_dict.get("conditions").get("T")
        vvv   = data_dict.get("values")
    val4a=[]; val4b=[]
    for i in range(len(temp4)):
        val4a.append(data_dict.get("values")[i][0][2][0])
        val4b.append(data_dict.get("values")[i][1][2][0])
    print()
    print('Expt temp4=', temp4)
    print('Expt val4a=', val4a)
    print('Expt val4b=', val4b)
    with open(name_exp, 'a+') as f:
        f.write('\n')
        f.write('\nCOLOR 4 ')
        for i in range(len(temp4)):
            if val4a[i] is not None:
                asd1 = str(val4a[i]) + '  ' + str(temp4[i]) + '  S3'
                f.write('\n')
                f.write(asd1)
            if val4b[i] is not None:
                asd2 = str(val4b[i]) + '  ' + str(temp4[i]) + '  S3'
                f.write('\n')
                f.write(asd2)
        f.write('\n')
    f.close()

if os.path.exists(file0_exp) and ibin_ter == 3:
    with open(file0_exp) as f:
        data_dict = json.load(f)
        vvv   = data_dict.get("values")
    val4a=[]; val4b=[]; val4c=[]; val4d=[]
    for i in range(len(vvv)):
        val4a.append(vvv[i][0][2][0])
        val4b.append(vvv[i][0][2][1])
        val4c.append(vvv[i][1][2][0])
        val4d.append(vvv[i][1][2][1])
    print('Expt val4a, b=', val4a, val4b)
    print('Expt val4c, d=', val4c, val4d)
    with open(name_exp, 'a+') as f:
        f.write('\n')
        f.write('\nCOLOR 4 ')
        for i in range(len(vvv)):
            if val4a[i] is not None:
                asd1 = str(val4a[i]) + '  ' + str(val4b[i]) + '  S3'
                f.write('\n')
                f.write(asd1)
            if val4c[i] is not None:
                asd2 = str(val4c[i]) + '  ' + str(val4d[i]) + '  S3'
                f.write('\n')
                f.write(asd2)
        f.write('\n')
    f.close()

###########
print()
print('========================================================')
print('Updated on 2019-07-23: write EXP for ternary')
print('Updated on 2019-07-09: write tcm file')
print('Updated on 2019-06-26: write EXP based on nTL+ data ')
### THE END ##############
