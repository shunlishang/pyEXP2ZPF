import os
import numpy as np
import json

#########################################
## define some funcitons below
##

def To_write_exp_file(name_exp, temp2, val2a, val2b, temp3, val3a, val3b, val3c):
    with open(name_exp, 'w') as f:
        f.write('\n$DATAPLOT Phase diagram generated by py_sort_TL code')
        f.write('\nDATASET 1 ')
        f.write('\nATTRIBUTE CENTER ')
        f.write('\n')
        f.write('\nCOLOR 1 ')
        for i in range(len(temp2)):
            f.write('\n')
            asd1 = str(val2a[i]) + '  ' + str(temp2[i]) + '  S1'
            asd2 = str(val2b[i]) + '  ' + str(temp2[i]) + '  S1'
            f.write(asd1)
            f.write('\n')
            f.write(asd2)
        f.write('\n')
        f.write('\nCOLOR 2 ')
        for i in range(len(temp3)):
            f.write('\n')
            aa1 = str(val3a[i]) + '  ' + str(temp3[i]) + '  S100'
            aa2 = str(val3b[i]) + '  ' + str(temp3[i]) + '  S100'
            aa3 = str(val3c[i]) + '  ' + str(temp3[i]) + '  S100'
            f.write(aa1)
            f.write('\n')
            f.write(aa2)
            f.write('\n')
            f.write(aa3)
        f.write('\n')
    f.close()

### END of function
#############################################
#############################################
#############################################
name_exp2='myExptTLINV_sorted.exp'
file0_exp = 'new_exp_data.json'

## for INV case below to write thermo-calc EXP file ###################################
with open('INV_Alls.json') as f:
    data_dict = json.load(f)
    temp3 = data_dict.get("conditions").get("T")
    val3a=[]; val3b=[]; val3c=[]
    for i in range(len(temp3)):
        val3a.append(data_dict.get("values")[i][0][2][0])
        val3b.append(data_dict.get("values")[i][1][2][0])
        val3c.append(data_dict.get("values")[i][2][2][0])

print()
print('temp3=',  len(temp3), '    ', temp3)
print('val3a=',  len(val3a), '    ', val3a)
print()
## for all TL cases below to write thermo-calc EXP file based on nTL+ files
current_dir_files2 = os.listdir('.')
ntot_temp2=[]; ntot_val2a=[]; ntot_val2b=[]
valu=[]; temp=[]
for fname in current_dir_files2:
    if fname[0:4] == 'nTL+':
        with open(fname) as f:
            #print('new TL =', fname)
            data_dict = json.load(f)
            valu  = data_dict.get("values")
            temp  = data_dict.get("conditions").get("T")
        #print(); print('name and temp = ', fname, temp)
        ntot_temp2.extend(temp)
        asd1 = []; asd2 = []
        for i in range(len(valu)):
            asd1.append(valu[i][0][2][0])
            asd2.append(valu[i][1][2][0])
        ntot_val2a.extend(asd1)
        ntot_val2b.extend(asd2)
##############
print()
print('Len new sorted ntot_temp2=',  len(ntot_temp2))
print('Len new sorted ntot_val2a=',  len(ntot_val2a))

###########
To_write_exp_file(name_exp2, ntot_temp2, ntot_val2a, ntot_val2b, temp3, val3a, val3b, val3c)  ## sort, based on nTL+...

###########

if os.path.exists(file0_exp):
    with open(file0_exp) as f:
        data_dict = json.load(f)
        temp4 = data_dict.get("conditions").get("T")
        vvv   = data_dict.get("values")
    val4a=[]; val4b=[]
    for i in range(len(temp4)):
        val4a.append(data_dict.get("values")[i][0][2][0])
        val4b.append(data_dict.get("values")[i][1][2][0])
    print()
    print('Expt temp4=', temp4)
    print('Expt val4a=', val4a)
    print('Expt val4b=', val4b)
    with open(name_exp2, 'a+') as f:
        f.write('\n')
        f.write('\nCOLOR 3 ')
        for i in range(len(temp4)):
            if val4a[i] is not None:
                asd1 = str(val4a[i]) + '  ' + str(temp4[i]) + '  S3'
                f.write('\n')
                f.write(asd1)
            if val4b[i] is not None:
                asd2 = str(val4b[i]) + '  ' + str(temp4[i]) + '  S3'
                f.write('\n')
                f.write(asd2)
        f.write('\n')
    f.close()

###########
print()
print('========================================================')
print('Updated on 2019-06-26: write EXP based on nTL+ data ')
### THE END ##############
